-- üìå Chargement de Rayfield UI
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

if not Rayfield then
    warn("‚ùå Rayfield UI n'a pas pu √™tre charg√© !")
    return
end
print("‚úÖ Rayfield UI charg√© avec succ√®s !")

-- üìå Cr√©ation de la fen√™tre principale
local Window = Rayfield:CreateWindow({
    Name = "Rivals Aimbot",
    LoadingTitle = "Rivals Aimbot v1.0",
    LoadingSubtitle = "By azfasty",
    Theme = "Dark",
    ConfigurationSaving = {Enabled = false}
})

-- üìå Cr√©ation de l'onglet Aimbot
local AimbotTab = Window:CreateTab("Aimbot", "crosshair") 
local AimbotSection = AimbotTab:CreateSection("Aimbot Settings") 

local Toggle = AimbotTab:CreateToggle({
   Name = "Toggle Example",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})

-- ‚úÖ Toggle Draw FOV
local FOVToggle = AimbotSection:CreateToggle({
    Name = "Draw FOV",
    CurrentValue = false,
    Flag = "DrawFOV",
    Callback = function(state)
        print("FOV activ√© :", state)
    end
})

-- ‚úÖ Slider pour r√©gler la taille du FOV
local FOVSlider = AimbotSection:CreateSlider({
    Name = "FOV Size",
    Range = {50, 300},
    Increment = 5,
    CurrentValue = 100,
    Flag = "FOVSize",
    Callback = function(value)
        print("FOV Size :", value)
    end
})

-- ‚úÖ Color Picker pour changer la couleur du FOV
local FOVColorPicker = AimbotSection:CreateColorPicker({
    Name = "FOV Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "FOVColor",
    Callback = function(color)
        print("FOV Color chang√© :", color)
    end
})

print("üî• Aimbot & ESP charg√©s avec Rayfield !")
